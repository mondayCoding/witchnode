@charset "UTF-8";


//***********************************************************************
//Default colors
//***********************************************************************

//accents
$main: 	 rgb(64, 207, 78) !default;
$alt: 	 #c4f56b !default;
$tertiary:rgb(215, 250, 210) !default;
$link:	 #23d5ab;

//basics grays
$grayBlack: 	#222 !default; 						//extreme dark gray
$grayDark: 		rgba(50, 50, 50, 1) !default; 	//body bg
$grayDarkAlt: 	rgba(58, 58, 58, 1) !default; 	//navi bg
$grayMedium:	rgba(110, 110, 110, 1) !default;	//disable color
$grayLight:		rgba(220, 220, 220, 1) !default;	//general text color

//basic
$white: 	#fff !default;
$black: 	rgb(0,0,0) !default;


//***********************************************************************
//Variables 
//***********************************************************************


//fonts
$bodyfont: 'fira-sans', sans-serif;
$headingfont: 'fira-sans', sans-serif;

//globals
$globalRadius: 				.35rem !default;
$globalShadow: 				0 0 .4rem transparentize($black, .5) !default;
$globalShadowInset: 			0 0 .4rem transparentize($black, .5) inset !default;
$globalContentPadding: 		1rem !default;
$globalTransitionColors: 	color .8s, background-color .8s;

//information colors
$errorColor:#db6154 !default;
$infoColor: #accff0 !default;
$warnColor: #e7e972 !default;


//****************************************************************************
// Theme mapping (color versioning)
//****************************************************************************

$themes: (
   red: (
      main: 			rgb(228, 105, 100),
      alt: 				#e0863b,
		tertiary:		rgb(236, 235, 154),
		link:				#f35f4b,
		grayBlack:		#222,
		grayDark	:		rgb(50, 50, 50),
		grayDarkAlt:	rgb(58, 58, 58),
		grayMedium:		rgba(110, 110, 110, 1),
		grayLight:		rgba(220, 220, 220, 1),
		white:			#fff,
		black:			rgb(0,0,0)		
   ),
   light: (
      main: 			rgb(56, 216, 96),
      alt: 				#19b4a0,
		tertiary:		rgb(206, 234, 236),
		link:				#23d5a0,		
		grayBlack:		#222,
		grayDark	:		rgb(224, 224, 224),
		grayDarkAlt:	rgb(255, 255, 255),
		grayMedium:		rgba(110, 110, 110, 1),
		grayLight:		rgb(39, 39, 39),
		white:			#fff,
		black:			rgb(0,0,0),		
	),
	violet: (
      main: 			rgb(221, 36, 206),
      alt: 				#f06bf5,
		tertiary:		rgb(235, 231, 247),
		link:				#a76ff0,
		grayBlack:		#222,
		grayDark	:		rgb(50, 50, 50),
		grayDarkAlt:	rgb(58, 58, 58),
		grayMedium:		rgba(110, 110, 110, 1),
		grayLight:		rgba(220, 220, 220, 1),
		white:			#fff,
		black:			rgb(0,0,0)		
	)
)!default;
 
 
//Query breakpoints
$breakpoints: (
  xs: 576px,
  sm: 768px,
  md: 994px,
  lg: 1140px,
  xl: 1600px,
  xxl: 1900px,
);

@import "_keyframes";


//****************************************************************************
// Mixins
//****************************************************************************

//Respond above breakpoint
@mixin respond-above($breakpoint) {

	@if map-has-key($breakpoints, $breakpoint) {

		$breakpoint-value: map-get($breakpoints, $breakpoint);

		@media screen and (min-width: $breakpoint-value) {
			@content;
		}
	} 
	@else {
		@warn 'Invalid breakpoint: #{$breakpoint}.';
	}
}

//Respond below breakpoint
@mixin respond-below($breakpoint) {

	@if map-has-key($breakpoints, $breakpoint) {

		$breakpoint-value: map-get($breakpoints, $breakpoint);

		@media screen and (max-width: ($breakpoint-value - 1)) {
			@content;
		}

	} @else {
		@warn 'Invalid breakpoint: #{$breakpoint}.';
	}
}

//Respond between breakpoints
@mixin respond-between($lower, $upper) {

	@if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {

		$lower-breakpoint: map-get($breakpoints, $lower);
		$upper-breakpoint: map-get($breakpoints, $upper);

		@media screen and (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
			@content;
		}

	} 
	@else {
		@if (map-has-key($breakpoints, $lower) == false) {
			@warn 'Your lower breakpoint was invalid: #{$lower}.';
		}

		@if (map-has-key($breakpoints, $upper) == false) {
			@warn 'Your upper breakpoint was invalid: #{$upper}.';
		}
	}
}

@mixin themeborder($input) {
   @include theme(border-color, $input);
}
@mixin themecolor($input) {
   @include theme(color, $input);
}
@mixin themebackground($input) {
   @include theme(background-color, $input);
}
@mixin themeoutline($input) {
   @include theme(outline-color, $input);
}

@mixin theme($prop, $color) {
	@each $theme, $property in $themes {
		@if map-has-key($property, $color) {
			.#{$theme} & {
				#{$prop}: map-get($property, $color);
			}
		}
		@else {
			@warn 'Invalid color mapping.';
		}
	}

}

@mixin input-placeholder {
	&.placeholder { @content; }
	&:-moz-placeholder { @content; }
	&::-moz-placeholder { @content; }
	&:-ms-input-placeholder { @content; }
	&::-webkit-input-placeholder { @content; }
}

@mixin size($size){
	width: $size;
	height: $size;
}

@mixin flex-cell($grow, $shrink, $basis)  {
	padding: .34rem;
   flex: $grow $shrink $basis;
   
   &.centered {
      display: flex;
      justify-content: center;
      align-items: center;
   }
}

@mixin flex-row {
	display: flex;
   flex-direction: row;
}

@mixin flex-column {
	display: flex;
   flex-direction: column;
} 

@mixin flex-center {
	display: flex;
	flex-direction: row;
	justify-content: center;
	align-items: center;
}

@mixin focusEffect {
	box-shadow: 0 0 .35rem $black;
	outline: .1rem solid $main;
	@include themeoutline(main);	
	
	&:hover {
		box-shadow: none;
		outline: none;
	}
}


//****************************************************************************
// Placeholders
//****************************************************************************

%bgAndColorTransition {
	transition: background-color .2s, color .2s, border .2s;
}

%clearfix {
	clear: both;
	
	&::after {
		content: "";
		display: table;
		clear: both;
	}
}

%disabled {
	opacity: .75;
	filter: grayscale(50%);
	pointer-events: none;
	cursor: not-allowed;
}

%textEllipses {
	text-overflow: ellipsis;
	overflow: hidden;
	white-space: nowrap;
}

%radioCheckboxSharedProperties {
	font-weight: 400;
	font-size: 1rem;
	position: relative;
	cursor: pointer;
	height: auto;
	display: flex;
	flex-direction: column;
	justify-content: center;
}

//****************************************************************************
// Universal (try to keep these few)
//****************************************************************************
 
* {
   box-sizing: border-box;
   margin: 0;
	padding: 0;
}

html {
   box-sizing: border-box;
   font-size: 1rem;
   height: 100vh;
}

body {
   box-sizing: border-box;
   font: 1rem $bodyfont;
   height: 100vh;
   line-height: 1.6;
}

p, span {
   font-size: 1rem;
}

li {
	list-style: none; 
}

h1, h2, h3, h4, h5 {
	font-family: $headingfont;
}

h1 {
   font-size: 2.5rem;
}

h2 {
	font-size: 2.2rem;
	color: $main;	
	@include themecolor(main);
	
}

h3 {
	font-size: 1.7rem;
}

a,
a:link {
	font-size: 1rem;
   font-weight: 700;
   transition: color .2s;
	text-decoration: none;
   color: $link;
	@include themecolor(link);
	
	
   &:hover,
   &:active {
		text-decoration: none;
		color: $alt;
		@include themecolor(alt);
		
   }
}

label {
	display: inline-block;
	margin: 0;
}

mark {
	padding: 0;
	background-color: $alt;
	@include themebackground(alt);	
}

kbd {
	margin: 0 0 0 .5rem;
	padding: 2px 4px;
	font-size: .9rem;
	border-radius: $globalRadius;
	box-shadow: inset 0 -1px 0 rgba(0,0,0,.25);
	color: $white;
	background-color: $grayDarkAlt;
	@include themecolor(white);	
	@include themebackground(grayDarkAlt);
}

input[type="text"] {
   background: none;
   width: 100%;
   outline: none;
   border:none;
}

button.disabled,
input.disabled,
select.disabled {
   @extend %disabled;
}


//****************************************************************************
// Utility
//****************************************************************************


.flex-center {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.flex-page-center {
   width: 100%;
   height: 100vh;
   display: flex;
   flex-direction: column;
   justify-content: center;
   align-items: center;
}

.flex-row, .row-flex {
   display: flex;
	flex-direction: row;

	&.center {
		justify-content: center;
	}
	&.spaced {
		justify-content: space-between;
	}
	&.center-all {
		justify-content: center;
		align-items: center;
	}
}

.hidden {
   display: none !important;
}

.row-spacing {
   margin-bottom: .9rem;
   @extend %clearfix;
}

//****************************************************************************
// Animation
//****************************************************************************

.shift-background {
	background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);
	background-size: 1000%;
	animation: Gradient 15s ease infinite; 
}

.gradient-background { 
	background: linear-gradient(-45deg, $main, #23d5ab, $alt);
	background-size: 100%;
}

.rainbow-border {
  border: .2rem solid #E73C7E;
  animation: rainbow 3s infinite alternate;
}

.animated-newItemFlash {
   background: linear-gradient(-45deg, #ee7752, #e73c7e, #0a6a8d, #00b48a);
	background-size: 1000%;
   animation-iteration-count: 1;
   animation: newItemFlash 1s;
}

.animated-glow-once {
   animation-iteration-count: 1;
   animation: simple-glow 1s linear; 
}

.animated-fall {
   animation-iteration-count: 1;
   animation: fadeInDrop .2s linear; 
}

.animated--scaleIn {
   animation-iteration-count: 1;
   animation: scaleIn .1s linear; 
}

@keyframes simple-glow {
	0% { 
      text-shadow: 0 0 0 white;  
   }
   50% {
      color: #4fa300;
      text-shadow: 0 0 .3rem white;      
   }
	100% 	{ 
      text-shadow: 0 0 0 white;   
   }
}

@keyframes newItemFlash {
	0% { 
      transform: scaleY(-1);
      background-position: 0% 50%; 
   }
   50% {
      background-position: 100% 50%;
      
   }
	100% 	{ 
      transform: scaleY(1);
      background-position: 0% 50%; 
   }
}

@keyframes fadeInDrop {
	0% 	{ 
      opacity: 0;
      transform: scale(0);
      margin-top: -30%;
   }
	65% 	{ 
      opacity: .5;
      transform: scale(.5);
      margin-top: -15%;
   }
	100% 	{ 
      opacity: 1;
      transform: scale(1);
      margin-top: none;

   }
}

@keyframes scaleIn {
	0% 	{ 
      opacity: 0;
      transform: scale(0);
   }
	65% 	{ 
      opacity: .5;
      transform: scale(.5);
   }
	100% 	{ 
      opacity: 1;
      transform: scale(1);
   }
}

//*******************************************************************************************************************************
// Components (context free)
//*******************************************************************************************************************************

// figure caption
.imageCaptionWrapper {
	position: relative;
	background-color: $black;

	&.lg {max-width: 700px;}
	&.md {max-width: 500px;}
	&.sm {max-width: 300px;}

	&:hover {

		.imageCaption {
			visibility: visible;
			opacity: 1;
			min-height: 25%;
		}
		.imageWithCaption {
			width: 100%;
			opacity: .8;
		}
	}
	
	.imageWithCaption {
		width: 100%;
		transition: opacity .2s linear;
	}

	.imageCaption {
		@include flex-column();
		visibility: hidden;
		opacity: 0;
		position: absolute;
		bottom: 0;
		left: 0;
		width: 100%;
		min-height: 10%;
		color: $grayLight;
		background-color: rgba(0,0,0, .7);
		padding: 1rem;
		line-height: 1.3;
		transition: opacity .2s linear, min-height .2s linear;

		b {
			margin-bottom: .5rem;
			display: inline-block;
		}
	}
}

//universal heading
.heading {
	font-size: 1rem;
   display: block;
   
   .md {
      font-size:1.25rem;
   }

   &.md {
      font-size:1.5rem;
   }

	&.lg {
		font-size: 2rem;		
	}

	&.negative {
		background-color: $grayDark;
		color: $grayLight;
   }
   
   &.underlined {
      padding-bottom: 0.25rem;
      border-bottom: .1rem solid $main;
   }
}

//close button
.close-button {
	display: flex;
	position: relative;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	height: 1.6rem;
	width: auto;
	transition: background-color .6s;
	border-radius: $globalRadius;
	border: .1rem solid $grayBlack;
	background-color: $grayBlack;
	@include themebackground(grayBlack);
	@include themeborder(grayBlack);

	&.noborder {
		border: none !important;
	}

	&.light {
		background: none;
	}

	&:hover {
		background-color: $alt;
		@include themebackground(alt);
	}

	&::before,
	&::after {
		transform: rotate(-45deg);
		content: '';
		position: absolute;
		display: block;
		height: .3rem;
		width: 1.2rem;
		transition: all .4s ease-out;
		background-color: $grayDarkAlt;
		@include themebackground(grayDarkAlt);		
	}

	&::after {
		transform: rotate(45deg);
	}

	&:hover::before,
	&:hover::after {
		background-color: $white;
		transform: rotate(0deg);
	}
}

//responsive text input (label next to field )
.themeinput-responsive {
   position: relative;
   margin-bottom: .5rem;
   display: flex;
   border: .1rem solid $grayMedium;
   border-radius: $globalRadius;

   &.number {
      max-width: 15rem;
      label {
         text-align: right;
      }
   }
   
   label {
      display: flex;
      align-items: center;
      padding: 0 .3rem;
      font-weight: 500;
      color: $grayLight;
      background-color: $grayMedium;
      flex: 0 0 10rem;
      @include themecolor(grayLight);
   }
   
   input[type="text"] {
      flex: 1 1 auto;
      font-size: 1rem;
      padding: .2rem .5rem;
      width: 100%;
      background: none;
      outline: none;
      border-left: .1rem solid $grayMedium;
      color: $grayLight;
      @include themecolor(grayLight);	 
      @include themeborder(grayMedium);

      &:focus {
         outline: none;
      }   
   }

   .Select {
      flex: 1 1 auto;
   }

   @include respond-below(sm) {
      flex-direction: column;

      label {
         flex: 1 1 auto;
      }
      input[type="text"] {
         flex: 1 1 auto;
      }
   }
}

.themeTextArea {
   position: relative;
   margin-bottom: .5rem;
   border: .1rem solid $grayMedium;
   border-radius: $globalRadius;
   
   label {
      display: flex;
      align-items: center;
      padding: .3rem;
      font-weight: 500;
      color: $grayLight;
      background-color: $grayMedium;
      @include themecolor(grayLight);
      @include themebackground(grayMedium);      
   }
   
   textarea {
      font-size: 1rem;
      padding: .5rem;
      width: 100%;
      min-height: 4rem;
      max-height: 30rem;
      resize: vertical;
      color: $grayLight;
      background: none;
      border: none;
      @include themecolor(grayLight);	 
      @include themeborder(grayMedium);
   }
}

.interactable {
   padding: .1rem .45rem;
   background-color: $grayBlack;
   color: $grayLight;
   user-select: none;
   cursor: pointer; 
   border-radius: $globalRadius;
}


//****************************************************************************
// Complex example page
//****************************************************************************


.complex--wrapper {

}


//****************************************************************************
// CoinFlipper
//****************************************************************************

.coinHeading {
   
   h3 {
      font-size: 1.5rem;
      text-align: center;
      padding: 1rem;
      background-color: $grayBlack;
      color: $grayMedium;
      border: .1rem solid $main;
   }
}

@keyframes flipHeads {
   from { -webkit-transform: rotateY(0); -moz-transform: rotateY(0); transform: rotateY(0); }
   to { -webkit-transform: rotateY(1800deg); -moz-transform: rotateY(1800deg); transform: rotateY(1800deg); }
 }
 @keyframes flipTails {
   from { -webkit-transform: rotateY(0); -moz-transform: rotateY(0); transform: rotateY(0); }
   to { -webkit-transform: rotateY(1980deg); -moz-transform: rotateY(1980deg); transform: rotateY(1980deg); }
 }

.coinFlipWrap {
   @include flex-center();

   .coin {
      @include size(12rem);
      @include flex-center();
      border-radius: 50%;
      border: .2rem solid $main;
      color: $main;
      text-align: center;
      line-height: 50%;
      font-weight: 900;
      font-size: 3rem;
      background-color: $grayBlack;
      box-shadow: $globalShadow;
      cursor: pointer;

      &.heads {
         animation: flipHeads 2s;
      }

      &.tails {
         animation: flipTails 2s;         
      }
   }
}

.countHeading {
   @include flex-center();
   flex-direction: column;
   text-align: center;
   background-color: $grayDark;
   border-radius: $globalRadius;
   font-weight: 900;
   border: .1rem solid $main;
   flex: 0 0 48%;

   div:first-child {
      font-size: 1.1rem;
      margin-top: .5rem;
      font-weight: 700;
   }
   div:not(first-child) {
      font-size: 2.5rem;
   }
}

//****************************************************************************
// Tabs
//****************************************************************************

.tabs {
   .tab-titles {
      border-bottom: .1rem solid $main;

      .tab-title {
         padding: .2rem .65rem;
         border: none;
         background-color: transparentize($color: $grayDark, $amount: .5);
         color: $grayLight;
         transition: background-color .2s;

         & + .tab-title {
            margin-left: .5rem;
         }

         &.active {
            color: $main;
         }

         &:hover {
            background-color: $main;
            box-shadow: $globalShadow;
            color: $white;
         }
         
         &:focus {
            @include focusEffect();
         }

         &:last-child {
            border-top-right-radius: .5rem;
         }
         &:first-child {
            border-top-left-radius: .5rem;
         }
      }
   }
   .tab-content {
      padding: 1rem;
   }
}

//****************************************************************************
// Progress bar (TODO)
//****************************************************************************

.progress-container {
	position: absolute;
	top: 0;
	right: 0;
	width: .2rem;
	height: 100%;
	background: rgba(0, 0, 0, .6);
	border: none;
}

.progress-bar {
	height: 0%;
	background: $main;
	@include themebackground(main);	
	max-width: 100%;
	width: .2rem;
}

//****************************************************************************
// Buttons
//****************************************************************************

.btn-green {
	color: #fff;
	font-size: 1rem;
	border: .15rem solid transparent;
	font-weight: 700;
	min-height: 1.8rem;
	width: auto;
	min-width: 6rem;
	padding: .25rem .35rem;
	text-align: center;
	line-height: 1.2;
	transition: background-color .2s;
	box-shadow: $globalShadow;
	background-color: $main;
	@include themebackground(main);	

	&:hover {
		background-color: $black;
		color: $white;
		@include themebackground(grayBlack);
		@include themecolor(white);				
	}

	&:focus {
		@include focusEffect;
		border: .15rem solid $white;
		@include themeborder(white);		  
	}

	&.uppercase {
		text-transform: uppercase;
	}
	
}

.themebutton {
	color: #fff;
	font-size: 1rem;
	border: .15rem solid transparent;
	font-weight: 700;
	min-height: 1.8rem;
	width: auto;
	min-width: 6rem;
	padding: .2rem .35rem;
	text-align: center;
	line-height: 1.2;
	transition: background-color .2s;
	box-shadow: $globalShadow;
	background-color: $main;
	@include themebackground(main);	

	&:hover {
		background-color: $black;
		color: $white;
		@include themebackground(grayBlack);
		@include themecolor(white);				
	}

	&:focus {
		@include focusEffect;
		border: .15rem solid $white;
		@include themeborder(white);		  
	}

	&.uppercase {
		text-transform: uppercase;
	}

	&.wide {
		width: 100%;
		display: block;
	}
	
}


//****************************************************************************
// Slider (Checkbox)
//****************************************************************************

$sliderSize: 1.5rem;
$sliderBoxSize: 1.8rem;

.slider-cb {
	input[type="checkbox"] {
		position: absolute;
		left: -999rem;

		&:focus + label {
			@include focusEffect;
		}

		&:disabled + label {
			color: desaturate($black, .4);
			cursor: default;

			&::before {
				background-color: desaturate($black, .8);
				border: .15rem solid desaturate($black, .8);
			}

			&::after {
				color: desaturate($black, .8);
				background-color: desaturate($black, .8);
			}
		}
	}

	[type="checkbox"] + label {
		@extend %radioCheckboxSharedProperties;
		padding: .5rem .5rem .5rem 4.7rem;
		min-height: 1.8rem;

		&:hover {
			background-color: $grayBlack;
			@include themebackground(grayBlack);			
		}

		//background
		&::before {
			content: '';
			position: absolute;
			left: .45rem;
			width: $sliderBoxSize*2;
			height: $sliderBoxSize;
			border-radius: $sliderBoxSize;
			transition: background-color .2s;
			box-shadow: $globalShadow;
			border: .2rem solid $grayMedium;
			background-color: $grayBlack;
			@include themeborder(grayMedium);
			@include themebackground(grayBlack);			
		}

		//slidebutton
		&::after {
			content: '';
			position: absolute;		
			font-size: 1.5rem; 
			width: $sliderSize;
			height: $sliderSize;
			border-radius: $sliderSize;
			transition: left .2s, background-color .2s;
			background-color: $tertiary;
			@include themebackground(tertiary);			
		}
	}

	[type="checkbox"]:not(:checked) + label::after {
		left: .65rem;
	}

	[type="checkbox"]:checked + label {

		&::after {
			left: $sliderBoxSize+.55rem;
			background-color: $tertiary;
			@include themebackground(tertiary);			
	 	}

		&::before {
			background-color:$main;
			border-color:$main;
			@include themebackground(main);
			@include themeborder(main);						
		}
	}
}


//****************************************************************************
// Checkbox
//****************************************************************************

$checkboxSize: 1.8rem;

.cb {
	& > input[type="checkbox"]  {
		position: absolute;
		left: -999rem;

		&:focus + label {
			@include focusEffect;
		}

		&:disabled + label {
			color: desaturate($black, .4);
			cursor: default;

			&::before {
				border-color: desaturate($black, .8);
				background-color: desaturate($black, .8);
				border: .1rem solid desaturate($black, .8);
			}

			&::after {
				color: desaturate($black, .4);
			}
		}
	}

	[type="checkbox"] + label {
		@extend %radioCheckboxSharedProperties;
		padding: .5rem .5rem .5rem 2.9rem;
		min-height: 1.8rem;

		&:hover {
			background-color: $grayBlack;
			@include themebackground(grayBlack);			
		}

		//bg
		&::before {
			content: '';
			position: absolute;
			left: .5rem;
			width: $checkboxSize;
			height: $checkboxSize;
			background: none;
			transition: opacity .2s;
			box-shadow: $globalShadow;
			border: .1rem solid $main;
			@include themeborder(main);			
		}

		//checkmark
		&::after {
			content: '✔';
			position: absolute;
			left: .8rem;
			font-size: 1.5rem;
			line-height: 1.8;
			transition: opacity .2s;	
			color: $tertiary;
			@include themecolor(tertiary);					
		}
	}

	[type="checkbox"]:not(:checked) + label::after {
		 opacity: 0;
	}

	[type="checkbox"]:checked + label {

		&::after {
		 	opacity: 1;
	 	}

		&::before {
			background-color: $main;
			@include themebackground(main);			
		}
	}
}

//****************************************************************************
// Radiobutton
//****************************************************************************

$radioSize: 1.5rem;

.rb {
	[type="radio"] {
		position: absolute;
		left: -999rem;

		&:focus + label {
			@include focusEffect;
		}

		&:disabled + label {
			color: desaturate($black, .4);
			cursor: default;

			&::before {
				border-color: desaturate($black, .8);
				background-color: desaturate($black, .8);
				border: .1rem solid desaturate($black, .8);
			}

			&::after {
				color: desaturate($black, .4);
			}
		}
	}

	//label
	[type="radio"] + label {
		@extend %radioCheckboxSharedProperties;
		padding: .5rem .5rem .5rem 2.5rem;
		min-height: $radioSize;

		&:hover {
			background-color: $grayBlack;
			@include themebackground(grayBlack);			
		}

		//bg
		&::before {
			content: '';
			position: absolute;
			left: .5rem;
			width: $radioSize;
			height: $radioSize;
			border-radius: $radioSize;
			background: none;
			transition: background-color .2s;
			box-shadow: $globalShadow;
			border: .15rem solid $main;
			@include themeborder(main);						
		}
	}

	[type="radio"]:checked + label {

		&::before {
			background-color: $tertiary;
			@include themebackground(tertiary);			
		}
	}
}

//****************************************************************************
// Text input (material design)
//****************************************************************************

$maxFieldWidth: 30rem;

.input-text {
   position: relative;
	margin-top: 1rem;
	max-width: $maxFieldWidth;

   input[type="text"] {
     font-size: 1rem;
     padding: .35rem;
     display: block;
     width: 100%;
     border: none;
	  background: none;
	  outline: none;
	  color: $grayLight;
     border-bottom: .1rem solid $grayMedium;
	  @include themecolor(grayLight);	 
	  @include themeborder(grayMedium);	   
   }
	
   input:focus { outline: none; }
	
   label {
		font-size: 1rem;
      font-weight: normal;
      position: absolute;
      pointer-events: none;
      left: .35rem;
      top: .7rem;
      transition: .2s ease all;
		color: $grayMedium;
		@include themecolor(grayMedium);		
   }
	
   input:focus + label,
	&.hasContent input + label {
		top: -.7rem;
      font-size: .8rem;
		color: $main;
		@include themecolor(main);		
   }
	
	&.hascontent input:invalid + label,
	input.invalid + label {
		font-weight: 900;
		color: $errorColor;
		border: $errorColor;
	}
	
	&.hascontent input:invalid ,
	input.invalid {
		border-color: $errorColor;
	}
	
	&.hascontent input:invalid + label + .bar::before,
	input.invalid + label + .bar::before {
		background: $errorColor;
	}
	
	.bar {
		position: relative;
		display: block;
		width: 100%;
		max-width: 100%;
	}
	
	.bar::before {
		content: '';
		height: .15rem;
		width: 0;
		bottom: 0;
		left: 0;
		position: absolute;
		transition: .15s ease all;
		background-color: $main;
		@include themebackground(main);	  
	}
	
	/* active state */
	input:focus ~ .bar::before {
		width: 100%;
	}
	
	input:required {
		box-shadow: none;
	}
}

//****************************************************************************
// Text input (plain)
//****************************************************************************

input[type="text"].input-plain {
	padding: .35rem;
	margin-bottom: .5rem;
	border-radius: $globalRadius;
	box-shadow: $globalShadowInset;
	border: .05rem solid $grayBlack;
	background-color: $grayDark;
	@include themeborder(grayBlack);
	@include themebackground(grayDark);		
}

//****************************************************************************
// Spacing elements
//****************************************************************************

// line - spacings
.line-thin {
	height: .1rem;
	margin: .7rem 0;
	display: block;
	border-bottom: .1rem solid $main;
	@include themeborder(main);	
}

.line-thick {
	border-bottom: .3rem solid $main;
	height: .2rem;
	margin: .7rem 0;
	display: block;
	@include themeborder(main);		
}

// empty space - spacings

.spacing-sm {
	height: .1rem;
	margin-bottom: .5rem;
   @extend %clearfix;
}

.spacing {
   margin-bottom: .8rem;
   @extend %clearfix;
}

.spacing-lg {
   margin-bottom: .8rem;
   @extend %clearfix;
}

//****************************************************************************
// Wizard Path
//****************************************************************************

$line-width:      .3rem;
$bullet-size:      1.5rem;

ol.wizard-path {
	@include flex-row;
	justify-content: space-between;
	position: relative;
	overflow: hidden; 
	min-height: 1.8rem;
	
	li {
		position: relative;
		text-align: center;
		flex: 1 1 auto;
		display: flex;
		justify-content: center;
		align-items: center;
		
		.bullet {
			text-align: center;
			width: $bullet-size;
			height: $bullet-size;
			border-radius: $bullet-size;
			position: relative;
			z-index: 1;
			transition: border-color .5s;
			background-color: $main;
			border: $line-width/1.3 solid $main;
			@include themebackground(main);	
			@include themeborder(main);					
		}
		& + li:after {
			content: "";
			display: block;
			width: 100%;
			height: $line-width;
			position: absolute;
			left: -50%;
			top: $bullet-size / 2;
			z-index: 0;
			transition: background-color .5s;
			background-color: $main;
			@include themebackground(main);			
		}
	 }

	li.current ~ li:after {
		background-color: $grayBlack;
		@include themebackground(grayBlack);
	}

	li.current ~ li .bullet {
		background-color: $grayDarkAlt;
		border-color: $grayBlack;
		@include themebackground(grayDarkAlt);
		@include themeborder(grayBlack);
	}
	li.current > .bullet {
		box-shadow: $globalShadow;
		background-color: $tertiary;
		@include themebackground(tertiary);				
	}
}

//****************************************************************************
// Error tooltip
//****************************************************************************

.input-text[data-tooltip-error]::before {
	visibility: hidden;
	opacity: 0;
	transition: opacity .15s ease-in-out, visibility .15s ease-in-out;
	pointer-events: none;
	position: absolute;
	padding: .5rem;
	border-radius: 0 0 .5rem .5rem;
	color: $errorColor;
	width: 100%;
	height: auto;
	left: 0;
	top: 100%;
	z-index: 300;
	content: attr(data-tooltip-error);
	background-color: $grayBlack;
	@include themebackground(grayBlack);
	
}

.input-text[data-tooltip-error]:hover::before {
	opacity: 1;
	visibility: visible;
}

//****************************************************************************
// Infotip Component
//****************************************************************************

$tipWidth: 2rem;
$tipMessageWidth: 14rem;

.tip {
	width: $tipWidth;
	padding: .5rem 1rem;
	opacity: .2;
	transition: color .2s, opacity .2s;
	display: inline-flex;
	justify-content: center;
	align-items: center;
	position: relative;
	font-size: 1rem;

	&:hover {
		opacity: 1;
		color: $main;
		@include themecolor(main);		

		//show tip message on hover
		.tip-message::before, 
		.tip-message::after {
			opacity: 1;
			visibility: visible;
		}
	}

	.tip-message {

		//content
		&::before {
			visibility: hidden;
			opacity: 0;
			transition: opacity .15s ease-in-out, visibility .15s ease-in-out;
			pointer-events: none;
			position: absolute;
			padding: .5rem;
			border-radius: .5rem;
			width: $tipMessageWidth;
			height: auto;
			bottom: 120%;
			left: -($tipMessageWidth/2 - $tipWidth/2);
			z-index: 300;
			content: attr(data-tooltip-info);
			color: $infoColor;
			background-color: $grayBlack;
			@include themebackground(grayBlack);			
		}
	
		//arrow
		&::after {
			visibility: hidden;
			opacity: 0;
			transition: opacity .15s ease-in-out, visibility .15s ease-in-out, transform 0.2s cubic-bezier(0.71, 1.7, 0.77, 1.24);		
			content: "";
			position: absolute;
			top: -20%;
			right: .55rem;
			margin-left: -5px;
			border-width: 7px;
			border-style: solid;
			border-color: $grayBlack transparent transparent transparent;
		}
	}
}

//text inside input field special case
.input-text .tip {
	position: absolute;
	right: .0;
	bottom: .0;
}

.input-text > input:focus ~ .tip  {
	opacity: 1;
	color: $main;
	@include themecolor(main);	

	.tip-message::before, 
	.tip-message::after {
		opacity: 1;
		visibility: visible;
	}
}

//****************************************************************************
// React-Select (overwrite)
//****************************************************************************

.Select-control {
	box-shadow: none;
	background: none !important;
	border: none;
	@include themebackground(grayDark);
	// border: .05rem solid $grayMedium;
   // @include themeborder(grayMedium);

   .Select-value {
      @include themecolor(grayLight);
      @include themeborder(grayMedium);
      border-color: $grayMedium;
      color: $link;
      margin-top: 3px;
   }
   .Select-value-icon {
      @include themeborder(grayMedium);
      border-color: $link;
   }
}

.Select-menu-outer {
   background: $grayDarkAlt;
   color: $grayLight;
   @include themecolor(grayLight);
   @include themebackground(grayDarkAlt);   
}

//****************************************************************************
// React-Daypicker (overwrite)
//****************************************************************************

.DayPickerInput {

   input {
      background: none;
      border:none;
   }
}

//****************************************************************************
// Modal
//****************************************************************************

.modal-fade {
	position: fixed;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	display: flex;
	justify-content: center;
	align-items: center;
	z-index: 999;
	transition: .5 background-color;
	background-color: rgba(0,0,0,.75);

	.confirm-box {
		background-color: $grayDarkAlt;
		border-radius: $globalRadius;
		width: 100%;
		max-width: 30rem;
		min-height: 8rem;
		padding: 1rem;
		margin: .3rem;
		position: relative;
		border: .4rem solid $main;
		@include themeborder(main);
		box-shadow: 0 0 .5rem $grayBlack; 	
	}

	.modal-box {
		@include flex-column;
		background-color: $grayDarkAlt;
		border-radius: $globalRadius;
		width: 100%;
		min-height: 11rem;
		padding: 1rem;
		position: relative;
		border: .4rem solid $main;
		@include themeborder(main);
      box-shadow: 0 0 .5rem $grayBlack;

         &.xl {
            max-width: 58rem;
         }
      
         &.lg {
            max-width: 50rem;
         }

         &.md {
            max-width: 40rem;
         }

         &.sm {
            max-width: 30rem;
         }

			.close-button {
				@include size(2rem);
				position: absolute;
				top: .3rem;
				right: .3rem;
			}

			.modal-heading .heading {
				text-align: center;
				font-size: 1.5rem;
				margin: .8rem;
				font-weight: 700;				
			}

			.modal-content-wrap {
				flex: 1 1 auto;			
			}
	}
}

.product--modal {
   display: flex;
   flex-direction: column;
   min-height: 30rem; 

   .tabs {
      flex: 1 1 auto;
   }

   .flex-row {
      flex: 0 0 auto;
   }
}


//*******************************************************************************************************************************************************
// Page styles
//******************************************************************************************************************************************************


//****************************************************************************
// Layout
//****************************************************************************

.body-layout {
	min-height: 100vh;
	height: auto;
   display: flex;
	flex-direction: column;
	color: $grayLight;
	@include themecolor(grayLight);
}

.content-layout {
	display: flex;
	flex-direction: row;
	flex: 1 1 auto;
}

nav.navigation {
	height: auto;
   flex: 0 0 15rem;
	border-right: .05rem solid $grayBlack;
	background-color: $grayDark;
	transition: $globalTransitionColors;
	@include themeborder(grayBlack);	
	@include themebackground(grayDark);
}
 
main.main {
   flex: 1 1 auto;
   height: auto;
	padding: 1.6rem;
	transition: $globalTransitionColors;
	background-color: $grayDarkAlt;
	@include themebackground(grayDarkAlt);
}

footer.footer {
	padding: .4rem;
	text-align: center;
	border-top: .05rem solid $grayBlack;
	background-color: $grayDarkAlt;
	transition: $globalTransitionColors;
	@include themeborder(grayBlack);	
	@include themebackground(grayDarkAlt);
}

//****************************************************************************
// Navigation
//****************************************************************************

nav.navigation {

	//navigation wrapper
   .navi-list {
      width: 100%;
      list-style: none;
      display: flex;
		flex-direction: column;
		position: sticky;
		top:0;
	}

	//single nav item (li)
	.navi-item > a {
		padding: .6rem;
		font-size: 1rem;
		font-weight: 400;
		text-align: left;
		border-top: .15rem solid transparent;
		border-bottom: .15rem solid transparent;
		white-space: nowrap;
		display: flex;
		justify-content: space-between;
		align-items: center;
		color: $grayLight;
		@extend %bgAndColorTransition;
		@include themecolor(grayLight);		

		&:focus {
			@include focusEffect;
		}

		&:hover {
			color: $main;
			border-top-color: $main;
			border-bottom-color: $main;
			@include themeborder(main);
			@include themecolor(main);						
		}

		&.active {
			color: $white;
			background-color: $main;
			@include themebackground(main);
			&:hover {
				color: $white;
			}						
		}
		
		.fa, .fas, .far {
			flex: 0 0 4rem;
			font-size: 1.2rem;
			text-align: center
		}

		.pagename {
			flex: 1 1 auto;
		}
		
		@include respond-below(lg){
			padding: 1rem .7rem ;
			text-align: center;
			border: .15rem solid transparent;

			&:hover {
				border: .15rem solid $main;
				@include themeborder(main);				
			}

			.fa, .fas {
				font-size: 1.5rem;
				flex: 1 1 auto;
			}
	
			.pagename {
				display: none;
			}
		}				
	}

	@include respond-below(lg){
		flex: 0 0 5rem;
	}
	
	
	@include respond-below(sm){
		flex: 0 0 2.5rem;
	}
}

//****************************************************************************
// Footer
//****************************************************************************

footer {
	a, a:link {
		color: $grayMedium;
		@include themecolor(grayMedium);
		
	}
}

//****************************************************************************
// Dashboard (page)
//****************************************************************************

.server-statistics {
	@include flex-row;

	.statistic {
		@include flex-center;
		flex: 1 1 auto;
		padding: 1rem;
		margin: .5rem;
		min-height: 10rem;
		border: .1rem solid $main;
		background-color: $grayDark;
		text-align: center;
		@include themeborder(grayBlack);
		@include themebackground(grayDark);
			
		.phrase {
			font-size: 1.2rem;
		}
		.counter {
			font-weight: 900;
			color: $alt;
			@include themecolor(alt);
			
		}
	}
}

.dashboard {
	width:100%;
	min-height: 60vh;
	display: flex;
	justify-content: space-between;
	flex-wrap: wrap;

	a.dash-item {
		flex: 1 0 10rem;
		display: flex;
		flex-direction: column;	
		justify-content: center;
		margin: .5rem;
		box-shadow: $globalShadow;
		transition: background-color .2s;
		border: .05rem solid $grayBlack;
		background-color: $grayDark;
		@include themeborder(grayBlack);
		@include themebackground(grayDark);
		

		&:hover {
			background-color: $main;
			color: $white;
			@include themebackground(main);
			@include themecolor(white);						
		}

		.pagesymbol {
			padding: 1rem;
			text-align: center;
			font-size: 3.3rem;
			
		}
		.pagetitle {
			padding: 1rem;
			text-align: center;
			font-weight: 400;		
		}
	}
}

//****************************************************************************
// Announcement (panel)
//****************************************************************************

.top-panel {
   display: flex;

   .announcement {
      flex: 1 1 auto;
      min-height: 2rem;
		height: auto;
		min-height: 6rem;
		overflow: hidden;
      padding: .5rem;
      text-align: center;
      background-color: $grayDark;
		border: .1rem solid $grayBlack;
		@include themebackground(graydark);
		@include themeborder(grayBlack);
		
		
   }
}

//****************************************************************************
// Timer
//****************************************************************************


.time-wrap {
   display: flex;
   flex-direction: row;
   margin-top: 1rem;

   .time-block {
      flex: 1 0 auto;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      padding: 3rem;

      .time-content {
			color: $alt;
			@include themecolor(alt);			

         h3 {
            font-size: 2rem;
            text-align: center;
         }
      }
   }
}

//****************************************************************************
// Live Chat (page)
//****************************************************************************

.chatwindow {
   @include flex-column;
	justify-content: space-between;
   min-height: 40rem;
   max-height: 50rem;
	border-radius: $globalRadius;
	padding: .5rem;
	border: .1rem solid $grayBlack;
	@include themeborder(grayBlack);	

   //message history
   .chatlog {
      flex: 1 1 auto;
      overflow-y: hidden;
      overflow-x: hidden;

      .line {
			@include flex-row;
			align-items: center;
         padding: .3rem;
         border-radius: $globalRadius;
         margin-bottom: .3rem;
         background-color: $grayBlack;
			@include themebackground(grayBlack);
			
         &:hover {
				background-color: $grayDarkAlt;
				@include themebackground(grayDarkAlt);				

            .line-timestamp  {
					color: $alt;
					@include themecolor(alt);					
            }
         }

         .line-user {
            flex: 0 0 5.2rem;
            font-weight: 900;
            // color: $main;
				margin-left: .45rem;
				@include themecolor(main);				

            .fa {
               padding-right: .25rem;
            }
         }

         .line-message {
            flex: 1 1 auto;
            padding-left: .5rem;
         }

         .line-timestamp {
            flex: 0 0 3rem;
				color: $grayDarkAlt;
				@include themecolor(grayDarkAlt);
				
         }

         &.user-system {
            background-color: #44565a;

            .line-user {
               color: skyblue;
            }
         }
         &.user-admin .line-user {color: gold;}
      }
	}
}

.user-selection {
	@include flex-row;
	flex-wrap: wrap;

	.selectable-user {
		@include flex-column;
		flex: 1 1 auto;
		margin: 1rem;
		transition: background-color .2s;
		box-shadow: $globalShadow;
		border-radius: $globalRadius;
		cursor: pointer;
		border: .05rem solid $grayBlack;
		background-color: $grayDark;
		@include themeborder(grayBlack);		
		@include themebackground(grayDark);		

		&.takeable {

			&:hover {
				background-color: $main;
				@include themebackground(main);
				
				.user-initial {
					background-color: $grayBlack;		
					@include themebackground(grayBlack);							
				}
			}

			.user-initial {
				border-bottom: .2rem solid $main;
				@include themeborder(main);				
			}
		}

		&.taken {
			opacity: .25;
			cursor: default;

			.user-initial {
				border-bottom: .2rem solid $errorColor;
			}
		}

		&.owned {
			border: .15rem solid $main;
			@include themeborder(main);
			
			.user-initial {
				background-color: $grayDark;
			}			
		}
		.user-initial {
			@include flex-center;
			font-size: 6rem;
			font-weight: 700;
			padding: 1rem;
			transition: background-color .2s;
			background-color: $grayMedium;
			@include themebackground(grayMedium);			
		}
		.user-name {
			padding: 1rem;
			@include flex-center;
		}
	}
}


//****************************************************************************
// ScrollSpy
//****************************************************************************

.scrollspy {
   margin-top: 1rem;
   display: flex;

   .is-inview {
      background-color: $alt;
		color: $white;
		@include themebackground(alt);
		@include themecolor(white);		
   }

   .scrollNav {
      flex: 0 0 8rem;

      ul {
         position: sticky;
         top: 1.2rem;
      }

      li {
         list-style: none;
         padding-left: 1.2rem;
      }

      a {
         display: block;
         width: 100%;
         padding: .7rem;
         text-align: right;
       }
   }

   .scrollContent {
      flex: 1 1 200px;

   }
}


//****************************************************************************
// Toastr (Notifications)
//****************************************************************************

#toast-container {

	.toast {
		max-width: 35rem;
		min-width: 25rem;
	}

	.toast.succes {
		background-color: $main;
		@include themebackground(main);
	}

	.toast-message {
		line-height: 1.2;
	}
}


//****************************************************************************
// Content-Wraps
//****************************************************************************

.content-centered-lg {
	max-width: 50rem;
	margin: 0 auto;
}

.content-centered-md {
	max-width: 35rem;
	margin: 0 auto;
}

.content-centered-sm {
	max-width: 20rem;
	margin: 0 auto;
}

//****************************************************************************
// Flex-table
//****************************************************************************


.item-link {
	cursor: pointer;
}

.flex-table {
	display: flex;
   flex-direction: column;
   
   .table-row:nth-child(odd) {
      background-color: $grayDarkAlt;
   }
}

.flex-row-table {
	display: flex;
	flex-direction: column;
	justify-content: space-between;

	.input-text {
		width: 100%;
		max-width: 100%;
		margin-bottom: .7rem;
   }
}


.table-row {
   @include flex-row;
   background-color: $grayDark;
	border-bottom: .1rem solid $grayBlack;
   @include themeborder(grayBlack);
   position: relative;

	&:last-child {
		border: none;
	}

	& > div {
		border-right: .1rem solid $grayBlack;
		@include themeborder(grayBlack);
		
		&:last-child {
			border: none;
		}
	}

	&:hover, &:nth-child(odd):hover  {
		background-color: #c5ff571a;
	}
}

.cell-15px {
	@include flex-cell(0, 0, 1rem);
}

.cell-30px {
	@include flex-cell(0, 0, 2rem);
}

.cell-60px {
	@include flex-cell(0, 0, 4rem);
}

.cell-120px {
	@include flex-cell(0, .5, 8rem);
}

.cell-200px {
	@include flex-cell(0, .5, 14rem);
}

.cell-auto {
	@include flex-cell(1, 1, 20rem);
}

.cell-status {
	@include flex-cell(0, 0, 3rem);
	display: flex;
	flex-direction: row;
	justify-content: center;

	.fa {
		font-size: 1.5rem;
	}
}

.cell-symbol {
	@include flex-cell(0, 0, 2rem);
}

.cell-name {
	@include flex-cell(0, .5, 12rem);
}

.cell-type {
	@include flex-cell(0, .5, 8rem);
}

.cell-desc {
	@include flex-cell(1, 1, 18rem);
}

.cell-tags {
	@include flex-cell(1, 1, 300px);
}

.cell-id {
	@include flex-cell(0, 0, 60px);
}


//completed task (special style)
.table-row.complete {

	.cell-status {
		color: $main;
		@include themecolor(main);		
	}

	.cell-auto {
		color: $grayMedium;
		@include themecolor(grayMedium);		
	}
}


//************************************************************
